sort(ob_data)
count_1 = 0
count_2 = 0
count_3 = 0
count_4 = 0
for(x in ob_data){
if(x>mean(ob_data)-3*sd & x<mean(ob_data)-sd){
count_1 = count_1 + 1
}
else if(x>mean(ob_data)-sd & x<mean(ob_data)){
count_2 = count_2 + 1
}
else if(x>mean(ob_data) & x<mean(ob_data)+sd){
count_3 = count_3 + 1
}
else if(x>mean(ob_data)+sd & x<mean(ob_data)+3*sd){
count_4 = count_4 + 1
}
}
count_intervals = c()
count_intervals = c(count_1,count_2,count_3,count_4,count_intervals)
p_intervals = c()
p1 = pnorm(-1,0,1)-pnorm(-3,0,1)
p2 = pnorm(0,0,1)-pnorm(-1,0,1)
p3 = pnorm(1,0,1)-pnorm(0,0,1)
p4 = pnorm(3,0,1)-pnorm(1,0,1)
p_intervals = c(p1,p2,p3,p4,p_intervals)
exp_count_intervals = 40*p_intervals
chi_sq = sum((count_intervals - exp_count_intervals)^2/exp_count_intervals)
chi_sq
#step 3
p_value = pchisq(chi_sq, df = 40-1, lower.tail = F)
p_value
#step 4&5
cat("Since p-value > 0.05, we can't reject the null hypothesis, which infers that datas accord with the normal distribution.")
sd = sqrt(sum((ob_data - mean(ob_data))^2)/40)
sd
?hist
hist(pct_weight)
hist(pct_weight[1,1])
hist(pct_weight, breaks = c(pct_weight[1,1],pct_weight[1,2]))
data = c()
for (i in 1:2){
for(j in 1:3){
data = c(pct_weight[i,j],data)
}
}
data
hist(data)
?hist
data = c()
for (i in 1:2){
for(j in 1:3){
data = c(pct_weight[i,j],data)
}
}
data
hist(data)
barplot(data)
data
barplot(data)
data = c()
for (i in 1:2){
for(j in 1:3){
data = c(pct_weight[i,j],data)
}
}
data
barplot(data)
barplot(data,breaks = 13)
?barplot
barplot(data,width = 1)
barplot(data,width = 2)
barplot(data,space = 1)
barplot(data,)
barplot(data,space = c(0,3))
barplot(data,space = c(0,1))
barplot(data,space = c(0,2))
barplot(data,space =1)
barplot(data,space =c(0.2))
barplot(data,space =c(0,1))
barplot(data,space =c(3,1))
barplot(data,space =c(3,2))
barplot(data,space =c(3,0))
barplot(data,space =c(2,0))
barplot(data,space =c(1,0))
barplot(data,space =c(1,-1))
0
barplot(data,space =c(1,0))
barplot(data,space =c(2,0))
barplot(data,space =c(4,0))
barplot(data,space =c(1,0))
barplot(data, col = c("green", "blue"))
?barplot
data = c()
for (i in 1:3){
for(j in 1:2){
data = c(pct_weight[i,j],data)
}
}
data
data = c()
for (i in 1:2){
for(j in 1:3){
data = c(pct_weight[i,j],data)
}
}
data
data = c()
for (i in 1:2){
for(j in 1:3){
data = c(pct_weight[i,j],data)
}
}
data
?barplot
data = c()
for (i in 1:3){
for(j in 1:2){
data = c(pct_weight[j,i],data)
}
}
data
barplot(data, col = c("green", "blue"))
barplot(data, col = c("lightblue", "lightred"))
barplot(data, col = c("lightblue", "pink"))
barplot(data, col = c("lightblue", "pink"),space = c(0,1))
barplot(data, col = c("lightblue", "pink"),space = c(1,0))
barplot(data, col = c("lightblue", "pink"),space = c(1,0), legend.text = T)
barplot(data, col = c("lightblue", "pink"),space = c(1,0), legend.text = F)
barplot(data, col = c("lightblue", "pink"),space = c(1,0), legend.text = T)
barplot(data, col = c("lightblue", "pink"),space = c(1,0), legend.text = c("wer"))
barplot(data, col = c("lightblue", "pink"),space = c(1,0), legend.text = c("Male", "Female"))
barplot(data, col = c("lightblue", "pink"),space = c(1,0), legend.text = c("Male", "Female"), axisnames = c("fr"))
barplot(data, col = c("lightblue", "pink"),space = c(1,0), legend.text = c("Male", "Female"), axisnames = c)
barplot(data, col = c("lightblue", "pink"),space = c(1,0), legend.text = c("Male", "Female"), axisnames = c("f","c"))
barplot(data, col = c("lightblue", "pink"),space = c(1,0), legend.text = c("Male", "Female"), axis.lty =  = c("f","c"))
barplot(data, col = c("lightblue", "pink"),space = c(1,0), legend.text = c("Male", "Female"), axis.lty = c("f","c"))
barplot(data, col = c("lightblue", "pink"),space = c(1,0), legend.text = c("Male", "Female"), cex.names =  = c("f","c"))
barplot(data, col = c("lightblue", "pink"),space = c(1,0), legend.text = c("Male", "Female"), cex.names = c("f","c"))
barplot(data, col = c("lightblue", "pink"),space = c(1,0), legend.text = c("Male", "Female"), cex.axis = c("f","c"))
barplot(data, col = c("lightblue", "pink"),space = c(1,0), legend.text = c("Male", "Female"), cex.axis = c("f","c","d"))
barplot(data, col = c("lightblue", "pink"),space = c(1,0), legend.text = c("Male", "Female"), cex.names = c("f","c","d"))
data = c()
for (i in 1:3){
for(j in 1:2){
data = c(pct_weight[j,i],data)
}
}
data
barplot(data, col = c("lightblue", "pink"),space = c(1,0), legend.text = c("Male", "Female"), cex.names = c("f","c","d"))
barplot(data, col = c("lightblue", "pink"),space = c(1,0), legend.text = c("Male", "Female"), names.arg = c("c","v","b"))
barplot(data, col = c("lightblue", "pink"),space = c(1,0), legend.text = c("Male", "Female"), names.arg = c("c","v","b"))
```{r}
barplot(data, col = c("lightblue", "pink"),space = c(1,0), legend.text = c("Male", "Female"), names.arg = c("c","v","b"))
barplot(data, col = c("lightblue", "pink"),space = c(1,0), legend.text = c("Male", "Female"))
barplot(data, col = c("lightblue", "pink"), legend.text = c("Male", "Female"))
barplot(data, col = c("lightblue", "pink"), legend.text = c("Male", "Female"),names.arg = c(1,2,3,4,56,6))
barplot(data, col = c("lightblue", "pink"),space=c(1,0), legend.text = c("Male", "Female"),names.arg = c(1,2,3,4,56,6))
barplot(data, col = c("lightblue", "pink"),space=c(1,0), legend.text = c("Male", "Female"),names.arg = c("c","v"))
barplot(data, col = c("lightblue", "pink"),space=c(1,0), legend.text = c("Male", "Female"),names.arg = c("c","v","c","c","c","c"))
data = c()
for (i in 1:3){
for(j in 1:2){
data = c(pct_weight[j,i],data)
}
}
data
barplot(data, col = c("lightblue", "pink"),space=c(1,0), legend.text = c("Male", "Female"),names.arg = c("Underweight","Underweight","Overweight","Overweight","About right","About right"))
data = c()
for (i in 3:1){
for(j in 1:2){
data = c(pct_weight[j,i],data)
}
}
data
barplot(data, col = c("lightblue", "pink"),space=c(1,0), legend.text = c("Male", "Female"),names.arg = c("Underweight","Underweight","Overweight","Overweight","About right","About right"))
?barplot
data = c()
for (i in 3:1){
for(j in 1:2){
data = c(pct_weight[j,i],data)
}
}
data
barplot(data, col = c("lightblue", "pink"),space=c(1,0), legend.text = c("Male", "Female"),names.arg = c("About right","About right","Overweight","Overweight","Underweight","Underweight"))
barplot(data, col = c("lightblue", "pink"),space=c(1,0), legend.text = c("Male", "Female"),names.arg = c("About right","About right","Overweight","Overweight","Underweight","Underweight"), ylim = c(1,100))
barplot(data, col = c("lightblue", "pink"),space=c(1,0), legend.text = c("Male", "Female"),names.arg = c("About right","About right","Overweight","Overweight","Underweight","Underweight"), ylim = c(0,100))
result = chisq.test(seatbelt, correct = F)
result
chi_sq = 0
for(i in 1:2){
for(j in 1:2){
chi_sq = sum((seatbelt[i,j]-exp_seatbelt[i,j])^2/exp_seatbelt[i,j]) + chi_sq
}
}
chi_sq
seatbelt = matrix(c(964,97,924,254),ncol=2,byrow=TRUE)
colnames(seatbelt) = c("ALWAYS","NEVER")
rownames(seatbelt) = c("FEMALE","MALE")
treatment = as.table(seatbelt)
total = addmargins(seatbelt)
total
pct_seatbelt = total
for(i in 1:3){
for (j in 1:3){
pct_seatbelt[i,j] = total[i,j]/total[i,3]*100
}
}
pct_seatbelt
total[3,1]*total[2,3]/total[3,3]
exp_seatbelt = total
exp_seatbelt[1,1] = total[3,1]*total[1,3]/total[3,3]
exp_seatbelt[1,2] = total[3,2]*total[1,3]/total[3,3]
exp_seatbelt[2,1] = total[3,1]*total[2,3]/total[3,3]
exp_seatbelt[2,2] = total[3,2]*total[2,3]/total[3,3]
exp_seatbelt
result = chisq.test(seatbelt, correct = F)
result
chi_sq = 0
for(i in 1:2){
for(j in 1:2){
chi_sq = sum((seatbelt[i,j]-exp_seatbelt[i,j])^2/exp_seatbelt[i,j]) + chi_sq
}
}
chi_sq
rain_p = (1*13+2*26+3*19+4*20+5*7)/(90*7)
ob_weeks = c(5,13,26,19,20,7,0,0)
p = c()
for(i in 0:7){
p = c(dbinom(i, 8, rain_p),p)
}
exp_weeks = p*90
p
pnorm(-1,0,1)
pnorm(1,0,1, lower.tail = F)
pnorm(1,0,1)-pnorm(0,0,1)
pnorm(0,0,1)-pnorm(-1,0,1)
sd(ob_data)
sd_ = sqrt(sum((ob_data - mean(ob_data))^2)/40)
sd_
#step 1
cat("H0 : 資料分配符合常態分配")
cat("H1 : 資料分配不符合常態分配")
#step 2
ob_data = c(18.8,14.6,14,15.8,12.4,13.2,16.1,13.8,16.2,16.1,17.8,18.7,15.8,13.3,13.6,16.4,13.8,16.6,15.3,19,18.4,15,18.8,18.1,17.3,16.3,17.5,18.1,14.2,18,13,13.3,12.4,16.6,14.1,20.6,16.8,13.3,18.2,16.9)
#sort(ob_data)
sd_ = sqrt(sum((ob_data - mean(ob_data))^2)/40)
count_1 = 0
count_2 = 0
count_3 = 0
count_4 = 0
for(x in ob_data){
if(x<mean(ob_data)-sd(ob_data)){
count_1 = count_1 + 1
}
else if(x>mean(ob_data)-sd(ob_data) & x<mean(ob_data)){
count_2 = count_2 + 1
}
else if(x>mean(ob_data) & x<mean(ob_data)+sd(ob_data)){
count_3 = count_3 + 1
}
else if(x>mean(ob_data)+sd(ob_data)){
count_4 = count_4 + 1
}
}
count_intervals = c()
count_intervals = c(count_1,count_2,count_3,count_4)
p_intervals = c()
p1 = pnorm(-1,0,1)
p2 = pnorm(0,0,1)-pnorm(-1,0,1)
p3 = pnorm(1,0,1)-pnorm(0,0,1)
p4 = pnorm(1,0,1, lower.tail = F)
p_intervals = c(p1,p2,p3,p4)
exp_count_intervals = 40*p_intervals
chi_sq = sum((count_intervals - exp_count_intervals)^2/exp_count_intervals)
chi_sq
#step 3
p_value = pchisq(chi_sq, df = 40-1, lower.tail = F)
p_value
#step 4&5
cat("Since p-value > 0.05, we can't reject the null hypothesis, which infers that datas accord with the normal distribution.")
setwd("~/Desktop")
data = read.csv("heartatk.csv")
mytable = xtabs(~SEX + DIED, data = data)
mytable
setwd("~/Desktop")
data = read.csv("heartatk.csv")
mytable = xtabs(~DRG + DIED, data = data)
mytable
setwd("~/Desktop")
data = read.csv("heartatk.csv")
mytable = xtabs(~SEX + DIED, data = data)
mytable
setwd("~/Desktop")
data = read.csv("heartatk.csv")
mytable = xtabs(~DRG + DIED, data = data)
MyChiSq = function(mytable){
#sum = addmargins(mytable)
exp_table = mytable
exp_table[1,1] = sum(mytable[,1])*sum(mytable[1,])/sum(mytable)
exp_table[1,2] = sum(mytable[,2])*sum(mytable[1,])/sum(mytable)
exp_table[2,1] = sum(mytable[,1])*sum(mytable[2,])/sum(mytable)
exp_table[2,2] = sum(mytable[,2])*sum(mytable[2,])/sum(mytable)
exp_table[3,1] = sum(mytable[,1])*sum(mytable[3,])/sum(mytable)
exp_table[3,2] = sum(mytable[,2])*sum(mytable[3,])/sum(mytable)
chis_table = (exp_table - mytable)^2 / exp_table
chi.square = sum(chis_table)
df = (nrow(mytable)-1)*(ncol(mytable)-1)
p_value = pchisq(chi.square, df = df, lower.tail = F)
paste("X.squared = ", round(chi.square,3), "df = ", df, "p_value = ", round(p_value,3))
}
MyChiSq(mytable)
setwd("~/Desktop")
data = read.csv("heartatk.csv")
mytable = xtabs(~DRG + DIED, data = data)
MyChiSq = function(mytable){
#sum = addmargins(mytable)
exp_table = mytable
exp_table[1,1] = sum(mytable[,1])*sum(mytable[1,])/sum(mytable)
exp_table[1,2] = sum(mytable[,2])*sum(mytable[1,])/sum(mytable)
exp_table[2,1] = sum(mytable[,1])*sum(mytable[2,])/sum(mytable)
exp_table[2,2] = sum(mytable[,2])*sum(mytable[2,])/sum(mytable)
exp_table[3,1] = sum(mytable[,1])*sum(mytable[3,])/sum(mytable)
exp_table[3,2] = sum(mytable[,2])*sum(mytable[3,])/sum(mytable)
chis_table = (exp_table - mytable)^2 / exp_table
chi.square = sum(chis_table)
df = (nrow(mytable)-1)*(ncol(mytable)-1)
p_value = pchisq(chi.square, df = df, lower.tail = F)
paste("X.squared = ", round(chi.square,3), "df = ", df, "p_value = ", round(p_value,3))
}
MyChiSq(mytable)
#check
result = chisq.test(mytable, correct = F)
result$expected
result
boxplot(GPA~Seat, data = student, main = "Boxplot of Different Roles of Seats and GPA")
setwd("~/Desktop")
student = read.csv("student.csv")
student = student[-which(student$Seat==""),]
student = na.omit(student)
paste("H0: The population means are all equal; H1: The population means are not all equal")
boxplot(GPA~Seat, data = student, main = "Boxplot of Different Roles of Seats and GPA")
stu.mean = tapply(student$GPA, student$Seat, mean)
stu.sd = tapply(student$GPA, student$Seat, sd)
stu.n = tapply(student$GPA, student$Seat, length)
stu= data.frame(n = stu.n, mean = stu.mean, sd = stu.sd)
stu
paste("From the boxplot and the summary above, we can know that there's no obvious skewness, outliers, and variance differences")
way = aov(GPA~Seat, data = student)
summary(way)
paste("F value = 3.827, P value = 0.0223")
paste("Since p value < 0.05, we can reject null hypothesis, inferring that the population means are not all equal")
interaction.plot(student$Seat,student$Sex,student$GPA, legend = F, lty = c(4,5), lwd = 2, col = c("red", "blue"), xlab = "Religion Importance", ylab = "GPA", main = "Interaction Plot", cex.main = 1.6)
MySimpleReg = function(x,y){
b1 = sum((x-mean(x))*(y-mean(y)))/sum((x-mean(x))^2)
b0 = mean(y)-slope*mean(x)
yhat = b0 + b1*x
ssto = sum((y-mean(y))^2)
sse = sum((y-yhat)^2)
r_sq = (ssto-sse)/ssto
list(Intercept = b0,
Slope = b1,
SSTO = ssto,
SSE= sse,
R_SQ = r_sq)
}
install.packages(c("ggplot2","gcookbook"))
install.packages(c("ggplot2","gcookbook"))
library(ggplot2)
library(gcookbook)
graph1 = data.frame(q = c(2,4,6,8,10),p = c(14,13,12,11,10))
ggplot(graph1,aes(x = Quality, y = Price))+geom_line()
graph1 = data.frame(Quantity = c(2,4,6,8,10),Price = c(14,13,12,11,10))
ggplot(graph1,aes(x = Quantiity, y = Price))+geom_line()
graph1 = data.frame(Quantity = c(2,4,6,8,10),Price = c(14,13,12,11,10))
ggplot(graph1,aes(x = Quantity, y = Price))+geom_line()
?ggplot
ggplot(graph1,aes(x = Quantity, y = Price))+geom_line()+xlim(0,12)+ylim(0,15)
ggplot(graph1,aes(x = Quantity, y = Price))+geom_line()+geom_point()+xlim(0,12)+ylim(0,15)
graph1 = data.frame(Quantity = c(2,4,6,8,10),Price = c(14,13,12,11,10))
graph2 = data.frame(Quantity = c(2,4,6,8,10),Price = c(18,16,14,12,10))
ggplot(graph1,aes(x = Quantity, y = Price))+geom_line()+geom_point()+xlim(0,12)+ylim(0,15)
ggplot(graph2,aes(x = Quantity, y = Price))+geom_line()+geom_point()+xlim(0,12)+ylim(0,15)
ggplot(graph2,aes(x = Quantity, y = Price))+geom_line()+geom_point()+xlim(0,12)+ylim(0,20)
graph1 = data.frame(Quantity = c(2,4,6,8,10),Price = c(14,13,12,11,10))
graph2 = data.frame(Quantity = c(2,4,6,8,10),Price = c(18,16,14,12,10))
ggplot(graph1,aes(x = Quantity, y = Price))+geom_line()+geom_point()+xlim(0,12)+ylim(0,15)
ggplot(graph2,aes(x = Quantity, y = Price))+geom_line()+geom_point()+xlim(0,12)+ylim(0,20)
ggplot(graph1,graph2,aes(x = Quantity, y = Price))+geom_line()+geom_point()+xlim(0,12)+ylim(0,20)
my.df <- data.frame(x, y1, y2)
xyplot(y1 ~ x, my.df, type = "l")
install.packages("lattice")
library(lattice)
graph1 <- data.frame(x=c(2,4,6,8,10),y1=c(14,13,12,11,10), y2=c(18,16,14,12,10),y3=c(13,11,9,7,5))
xyplot(y1+y2+y3 ~ x, graph1, type = "l")
xyplot(y1+y2+y3 ~ x, graph1, type = "l",main="plot")
?plot
?xyplot
?legned
?legend
xyplot(y1+y2+y3 ~ x, graph1, type = "l",main="plot",legend(x,y = c("a","b","c")))
xyplot(y1+y2+y3 ~ x, graph1, type = "l",main="plot",legend(x,y = c("a","b","c")))
xyplot(y1+y2+y3 ~ x, graph1, type = "l",main="plot",legend("bottomright")
graph1 <- data.frame(x=c(2,4,6,8,10),y1=c(14,13,12,11,10), y2=c(18,16,14,12,10),y3=c(13,11,9,7,5))
xyplot(y1+y2+y3 ~ x, graph1, type = "l",main="plot",legend("bottomright")
?legend
xyplot(y1+y2+y3 ~ x, graph1, type = "l",main="plot",legend("bottomright"))
graph1 <- data.frame(x=c(2,4,6,8,10),y1=c(14,13,12,11,10), y2=c(18,16,14,12,10),y3=c(13,11,9,7,5))
xyplot(y1+y2+y3 ~ x, graph1, type = "l",main="plot",legend("bottomright"))
graph1 <- data.frame(x=c(2,4,6,8,10),y1=c(14,13,12,11,10), y2=c(18,16,14,12,10),y3=c(13,11,9,7,5))
xyplot(y1+y2+y3 ~ x, graph1, type = "l",main="plot",legend("topright", c("a", "b","c"), fill = c("greenyellow", "indianred","blue"), bty = "n", ncol = 2, cex = 0.8))
graph1 <- data.frame(x=c(2,4,6,8,10),y1=c(14,13,12,11,10), y2=c(18,16,14,12,10),y3=c(13,11,9,7,5))
xyplot(y1+y2+y3 ~ x, graph1, type = "l",main="plot",legend("topright", c("a", "b","c"), fill = c("greenyellow", "indianred","blue"), bty = "n", ncol = 2, cex = 0.8))
graph1 <- data.frame(x=c(2,4,6,8,10),y1=c(14,13,12,11,10), y2=c(18,16,14,12,10),y3=c(13,11,9,7,5))
xyplot(y1+y2+y3 ~ x, graph1, type = "l",main="plot",legend("topright", c("a", "b","c"), fill = c("greenyellow", "indianred","blue"), bty = "n", ncol = 2, cex = 0.8))
legend("topright", c("a", "b","c"), fill = c("greenyellow", "indianred","blue"), bty = "n", ncol = 2, cex = 0.8)
xyplot(y1+y2+y3 ~ x, graph1, type = "l",main="plot")
legend("topright", c("a", "b","c"), fill = c("greenyellow", "indianred","blue"), bty = "n", ncol = 2, cex = 0.8)
plot(y1+y2+y3 ~ x, graph1, type = "l",main="plot")
xylegend("topright", c("a", "b","c"), fill = c("greenyellow", "indianred","blue"), bty = "n", ncol = 2, cex = 0.8)
xyplot(y1+y2+y3 ~ x, graph1, type = "l",main="plot",legend("topright", c("a", "b","c"), fill = c("greenyellow", "indianred","blue"), bty = "n", ncol = 2, cex = 0.8))
xyplot(y1+y2+y3 ~ x, graph1, type = "l",main="plot",legend("topright", c("a", "b","c"), fill = c("greenyellow", "indianred","blue"), bty = "n", ncol = 2, cex = 0.8))
graph1 <- data.frame(x=c(2,4,6,8,10),y1=c(14,13,12,11,10), y2=c(18,16,14,12,10),y3=c(13,11,9,7,5))
xyplot(y1+y2+y3 ~ x, graph1, type = "l",main="plot",legend("topright", c("a", "b","c"), fill = c("greenyellow", "indianred","blue"), bty = "n", ncol = 2, cex = 0.8))
xyplot(y1+y2+y3 ~ x, graph1, type = "l",main="plot")
xyplot(y1+y2+y3 ~ x, graph1, type = "l",main="plot",xlab = "Quantity", ylab = "Price")
?auto.key
?xyplot
xyplot(y1+y2+y3 ~ x, graph1, type = "l",main="plot",xlab = "Quantity", ylab = "Price",auto.key = list(space = "top"))
xyplot(y1+y2+y3 ~ x, graph1, type = "l",main="plot",xlab = "Quantity", ylab = "Price",auto.key = list(space = "right"))
?xyplot
xyplot(y1+y2+y3 ~ x, graph1, type = "l",main="plot",xlab = "Quantity", ylab = "Price",auto.key = list(space = "right",y = c("a","b","c")))
xyplot(y1+y2+y3 ~ x, graph1, type = "l",main="plot",xlab = "Quantity", ylab = "Price",auto.key = list(space = "right",names("a","b","c")))
xyplot(y1+y2+y3 ~ x, graph1, type = "l",main="plot",xlab = "Quantity", ylab = "Price",auto.key = list(space = "right",args("a","b","c")))
xyplot(y1+y2+y3 ~ x, graph1, type = "l",main="plot",xlab = "Quantity", ylab = "Price",auto.key = list(space = "right",c("a","b","c")))
xyplot(y1+y2+y3 ~ x, graph1, type = "l",main="plot",xlab = "Quantity", ylab = "Price",auto.key = list(space = "right",y1=c("a","b","c")))
?xyplot
xyplot(y1+y2+y3 ~ x, graph1, type = "l",main="plot",xlab = "Quantity", ylab = "Price",auto.key = list(space = "right",points = T))
xyplot(y1+y2+y3 ~ x, graph1, type = "l",main="plot",xlab = "Quantity", ylab = "Price",auto.key = list(space = "right",points = TRUE))
xyplot(y1+y2+y3 ~ x, graph1, type = "l",main="plot",xlab = "Quantity", ylab = "Price",(y1,y2,y3)=c("a","b","v"),auto.key = list(space = "right"))
xyplot(y1+y2+y3 ~ x, graph1, type = "l",main="Marginal Benefit Functions",xlab = "Quantity", ylab = "Price",auto.key = list(space = "right"))
graph1 <- data.frame(x=c(2,4,6,8,10),equation_1=c(14,13,12,11,10), equation_2=c(18,16,14,12,10),equation_3=c(13,11,9,7,5))
xyplot(equation_1+equation_2+equation_3 ~ x, graph1, type = "l",main="Marginal Benefit Functions",xlab = "Quantity", ylab = "Price",auto.key = list(space = "right"))
dbinom(10,1000,0.02)
?seq
x = seq(0,1000)
y = dbinom(x)
plot(x,y)
x = seq(0,1000,length.out = 1000)
y = dbinom(x)
plot(x,y)
x = seq(0,1000,length.out = 1000)
y = dnom(x)
plot(x,y)
x = seq(0,1000,length.out = 1000)
y = dnorm(x)
plot(x,y)
x = seq(-5,5,length.out = 1000)
y = dnorm(x)
plot(x,y)
x = seq(-5,5,length.out = 1000)
y = dbinom(x,1000,0.02)
plot(x,y)
x = seq(0,1000)
y = dbinom(x,1000,0.02)
plot(x,y)
x = c(1,2,3,4,5)
y = c()
for(i in 1:5){
y = append(y,x[i])
}
y
sum(y)
?curve
curve((-1/3000)*(x-150)^2+7.5, 0,300)
curve((-1/3000)*(x-150)^2+7.5, 0,300, xlab = "Quantity", ylab = "Price")
curve((-1/3000)*(x-150)^2+7.5, 0,300, xlab = "Quantity", ylab = "Price")
?text()
abline(x = 150)
abline(150)
curve((-1/3000)*(x-150)^2+7.5, 0,300, xlab = "Quantity", ylab = "Price")
?text()
abline(v = 150)
abline(v = 150, col = "red")
plot((0,300), (15,0), type = "l")
plot((0,300),(15,0), type = "l")
plot(c(0,300),c(15,0), type = "l")
points(c(150,9))
points(150,9)
plot(c(0,300),c(15,0), type = "l")
points(7.5,9)
points(150,7.5, col = "red")
points(150,7.5, col = "red", pch = 16)
plot(c(0,300),c(15,0), type = "l", xlab = "Quantity", ylab = "Price")
points(150,7.5, col = "red", pch = 16)
Q = 3.75
-10*(Q^2)+75*Q-60
Q^2
-10*(Q^2)
max(-10*(Q^2)+75*Q-60)
max(-10*(k^2)+75*k-60)
-10*(Q^2)+75*Q-60
k = 4.5
90*k-10*k^2
10*k^2
k = 4.5
90*k-10*k^2
Q = 7.5
-5*Q^2+75*Q-60
Mean.Center<-mean_centre(id=1, weighted=FALSE, weights=NULL, points=df)
shiny::runApp('Desktop/data visual/final/final')
